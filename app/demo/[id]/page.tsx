'use client';

import { useState, useEffect } from 'react';
import { useParams, useRouter, useSearchParams } from 'next/navigation';
import Link from 'next/link';

export default function DemoPage() {
  const params = useParams();
  const router = useRouter();
  const searchParams = useSearchParams();
  const [selectedRole, setSelectedRole] = useState('');
  const [timeLeft, setTimeLeft] = useState(30 * 60);
  const [demoStarted, setDemoStarted] = useState(false);
  const [userSolution, setUserSolution] = useState('');
  const [showFeedback, setShowFeedback] = useState(false);
  const [feedback, setFeedback] = useState('');
  const [showOptimal, setShowOptimal] = useState(false);

  // Check URL for pre-selected role
  useEffect(() => {
    const roleFromUrl = searchParams.get('role');
    if (roleFromUrl && ['teacher', 'parent', 'specialist'].includes(roleFromUrl)) {
      setSelectedRole(roleFromUrl);
      setDemoStarted(true); // Start demo automatically if role is pre-selected
    }
  }, [searchParams]);

  // Timer
  useEffect(() => {
    if (demoStarted && timeLeft > 0) {
      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);
      return () => clearTimeout(timer);
    } else if (timeLeft === 0) {
      alert('Demo tiden er udl√∏bet!');
      router.push('/');
    }
  }, [timeLeft, demoStarted, router]);

  // Format time
  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const roles = [
    { id: 'teacher', name: 'L√¶rer', icon: 'üë©‚Äçüè´', description: 'Underviser i folkeskole eller gymnasium' },
    { id: 'parent', name: 'For√¶lder', icon: 'üë®‚Äçüë©‚Äçüëß', description: 'For√¶lder til barn med s√¶rlige behov' },
    { id: 'specialist', name: 'Specialist', icon: 'üë®‚Äç‚öïÔ∏è', description: 'P√¶dagog, psykolog eller terapeut' }
  ];

  // Get case content based on role
  const getCaseContent = () => {
    switch (selectedRole) {
      case 'parent':
        return {
          title: 'üè† S√∏skendejalouxi - Elias, 8 √•r',
          description: `Du sidder og roser din datter for hendes fine tegning. Pludselig kommer Elias stormende ind, river tegningen i stykker og skriger: "Hun f√•r ALT! Jeg hader hende!" Han skubber til sin lilles√∏ster og l√∏ber op p√• sit v√¶relse. Din datter gr√¶der, og du st√•r tilbage og ved ikke hvad du skal g√∏re.`,
          taskTitle: 'Hvad g√∏r du som for√¶lder?',
          taskDescription: 'Du kender denne situation. Beskriv hvordan du vil h√•ndtere det:',
          points: [
            'Hvad g√∏r du f√∏rst n√•r det sker?',
            'Hvordan taler du med Elias bagefter?',
            'Hvordan forebygger du det n√¶ste gang?',
            'Hvordan hj√¶lper du begge b√∏rn?'
          ],
          placeholder: 'Skriv hvordan du ville reagere i denne situation...'
        };
      
      case 'teacher':
        return {
          title: 'üéì Klassev√¶relse - Oliver, 9 √•r (ADHD + Autisme)',
          description: `Oliver afbryder konstant andre elever i gruppearbejde, griner p√• forkerte tidspunkter og forst√•r ikke sociale signaler. I dag slog han pludselig en pige under gruppearbejdet, fordi han f√∏lte sig uretf√¶rdigt behandlet. Klassen er urolig, og du ved dette sker igen og igen.`,
          taskTitle: 'Din undervisningsstrategi:',
          taskDescription: 'Som l√¶rer skal du h√•ndtere b√•de situationen og forebygge fremtidige konflikter:',
          points: [
            'Hvordan strukturerer du gruppearbejde for Oliver?',
            'Hvilke visuelle hj√¶lpemidler bruger du?',
            'Hvordan l√¶rer du ham sociale regler?',
            'Hvordan involverer du klassen positivt?'
          ],
          placeholder: 'Beskriv din p√¶dagogiske tilgang til Oliver...'
        };

      case 'specialist':
        return {
          title: 'üë©‚Äç‚öïÔ∏è Klinisk case - Sofia, 14 √•r (ASF + Angst)',
          description: `Sofia pr√¶senterer masking-adf√¶rd med h√∏j akademisk kompensation. Hun opretholder social facade i skolen, men rapporterer omfattende energiudmattelse hjemme. For√¶ldre beskriver sammenbrud, social isolation og somatiske symptomer (hovedpine, s√∏vnforstyrrelser). Skolepersonale er ikke opm√¶rksom p√• belastning.`,
          taskTitle: 'Klinisk intervention og koordination:',
          taskDescription: 'Udarbejd evidensbaseret interventionsplan med tv√¶rfaglig koordination:',
          points: [
            'Diagnostisk differentiering og komorbiditetsvurdering',
            'Strukturelle milj√∏tilpasninger (skole/hjem)',
            'Energimanagement og masking-reduktion',
            'Tv√¶rfaglig koordination og for√¶ldreguidning'
          ],
          placeholder: 'Udarbejd systematisk interventionsplan baseret p√• trauma-informeret praksis...'
        };

      default:
        return {
          title: 'Case: St√∏tte til Heidi',
          description: `Heidi er en 8-√•rig pige med ADHD og let autisme. Hun har sv√¶rt ved at koncentrere sig i klassen og bliver ofte frustreret n√•r rutiner √¶ndres. Hendes l√¶rer har bem√¶rket at hun klarer sig bedre n√•r hun f√•r visuelle hj√¶lpemidler.`,
          taskTitle: 'Din opgave:',
          taskDescription: 'Beskriv hvordan du vil hj√¶lpe Heidi med at f√• en bedre skoledag. T√¶nk p√•:',
          points: [
            'Struktur og rutiner',
            'Visuelle hj√¶lpemidler', 
            'Pausestrategier',
            'Samarbejde med for√¶ldre'
          ],
          placeholder: 'Skriv din l√∏sning her...'
        };
    }
  };

  const startDemo = () => {
    if (!selectedRole) {
      alert('V√¶lg venligst en rolle f√∏rst');
      return;
    }
    setDemoStarted(true);
  };

  const generateFeedback = () => {
    if (userSolution.length < 50) {
      alert('Skriv venligst en mere detaljeret l√∏sning (mindst 50 tegn)');
      return;
    }

    // Role-specific feedback
    let feedbackText = '';
    
    switch (selectedRole) {
  case 'parent':
    feedbackText = `Godt arbejde som for√¶lder! üë®‚Äçüë©‚Äçüëß

‚úÖ Styrker i din tilgang:
- Du t√¶nker p√• begge b√∏rns f√∏lelser
- Du forst√•r at jalouxi er normalt

üí° Forslag til n√¶ste gang:
- Giv Elias sin egen tid hver dag (15 min kun jer to)
- Anerkend hans f√∏lelser: "Du er vred - det forst√•r jeg"
- Lav faste regler for s√∏skende: "Vi hj√¶lper hinanden"
- Ros ham for at v√¶re en god storebror

üìä Din for√¶ldrescore: 8/10

I den fulde CDT-platform f√•r du personlige r√•d og konkrete redskaber til jeres hverdag.`;
        break;

      case 'teacher':
        feedbackText = `St√¶rk p√¶dagogisk tilgang! üéì

‚úÖ Styrker i din undervisning:
- Du t√¶nker strukturelt og forebyggende
- Du inkluderer klassef√¶llesskabet

üí° P√¶dagogiske udviklingspunkter:
- Brug "sociale historier" til at l√¶re Oliver regler
- Indf√∏r visuelle rollefordelingskort i gruppearbejde
- Lav mikropauser hver 10. minut i social kontakt
- Koordiner med for√¶ldre om f√¶lles strategier

üìä Din undervisningsscore: 8/10

I CDT-platformen f√•r du 100+ konkrete undervisningsv√¶rkt√∏jer til b√∏rn som Oliver.`;
        break;

      case 'specialist':
        feedbackText = `Professionel klinisk tilgang! üë©‚Äç‚öïÔ∏è

‚úÖ Faglige styrker:
- Systematisk differentialdiagnostisk t√¶nkning
- Opm√¶rksomhed p√• masking og energiudmattelse

üí° Kliniske udviklingsomr√•der:
- Implementer energikurve-monitorering med visuel st√∏tte
- Koordiner trauma-informeret milj√∏tilpasning i skole
- Etabler strukturerede for√¶ldresamtaler om restitution
- Anvend CBT-baserede masking-reduktionsstrategier

üìä Din specialistscore: 9/10

Den fulde CDT-platform indeholder evidensbaserede interventionsprotokol og tv√¶rfaglige koordinationsv√¶rkt√∏jer.`;
        break;

      default:
        feedbackText = `Godt arbejde! Her er feedback p√• din l√∏sning:

‚úÖ Styrker:
- Du har fokus p√• at hj√¶lpe barnet
- Din tilgang virker omsorgsfuld

üí° Forslag til forbedringer:
- Overvej mere specifikke visuelle hj√¶lpemidler
- T√¶nk p√• hvordan pauserne kan struktureres bedre
- Husk at involvere for√¶ldrene i planen

üìä Score: 7/10`;
    }

    setFeedback(feedbackText);
    setShowFeedback(true);
  };

  const showOptimalSolution = () => {
    setShowOptimal(true);
    setShowFeedback(false);
  };

  const caseContent = getCaseContent();

  // If demo is started, show demo interface
  if (demoStarted) {
    return (
      <div className="min-h-screen bg-gray-900 py-8">
        <div className="container mx-auto px-4">
          {/* Header with timer */}
          <div className="bg-gray-800 rounded-lg p-4 mb-8 flex justify-between items-center">
            <h1 className="text-2xl font-bold text-emerald-500">CDT Demo - {roles.find(r => r.id === selectedRole)?.name}</h1>
            <div className="text-xl font-mono text-emerald-400">
              ‚è±Ô∏è {formatTime(timeLeft)}
            </div>
          </div>

          {/* Demo content */}
          <div className="bg-gray-800 rounded-lg p-8">
            <h2 className="text-xl font-bold text-gray-100 mb-4">{caseContent.title}</h2>
            <div className="prose prose-invert max-w-none">
              <div className="bg-emerald-900 bg-opacity-20 border-l-4 border-emerald-500 p-4 mb-6 rounded-r-lg">
                <p className="text-gray-300 mb-0">
                  {caseContent.description}
                </p>
              </div>
              
              <h3 className="text-lg font-semibold text-emerald-400 mt-6 mb-3">{caseContent.taskTitle}</h3>
              <p className="text-gray-300 mb-4">
                {caseContent.taskDescription}
              </p>
              <ul className="list-disc list-inside text-gray-300 space-y-2 mb-6">
                {caseContent.points.map((point, index) => (
                  <li key={index}>{point}</li>
                ))}
              </ul>

              <textarea
                value={userSolution}
                onChange={(e) => setUserSolution(e.target.value)}
                className="w-full h-40 p-4 bg-gray-700 text-gray-100 rounded-lg border border-gray-600 
                         focus:border-emerald-500 focus:outline-none resize-none"
                placeholder={caseContent.placeholder}
              />

              <div className="flex gap-4 mt-6">
                <button 
                  onClick={generateFeedback}
                  className="bg-emerald-600 hover:bg-emerald-700 text-white px-6 py-3 rounded-lg 
                           font-semibold transition-colors">
                  F√• AI Feedback
                </button>
                <button 
                  onClick={showOptimalSolution}
                  className="bg-gray-700 hover:bg-gray-600 text-white px-6 py-3 rounded-lg 
                           font-semibold transition-colors">
                  Se Optimal L√∏sning
                </button>
              </div>

              {/* Show feedback */}
              {showFeedback && (
                <div className="mt-6 p-6 bg-gray-700 rounded-lg border border-emerald-500">
                  <h3 className="text-lg font-semibold text-emerald-400 mb-3">AI Feedback:</h3>
                  <div className="text-gray-300 whitespace-pre-line">
                    {feedback}
                  </div>
                  <button 
                    onClick={() => setShowFeedback(false)}
                    className="mt-4 text-sm text-gray-400 hover:text-gray-300 underline"
                  >
                    Luk feedback
                  </button>
                </div>
              )}
            </div>
          </div>

          {/* End demo */}
          <div className="mt-8 text-center">
            <Link href="/" className="text-gray-400 hover:text-gray-300 underline">
              Afslut demo og vend tilbage
            </Link>
          </div>
        </div>
      </div>
    );
  }

  // Role selection interface (only shown if no role in URL)
  return (
    <div className="min-h-screen bg-gray-900 flex items-center justify-center p-4">
      <div className="max-w-4xl w-full">
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-emerald-500 mb-4">
            Velkommen til CDT Demo
          </h1>
          <p className="text-xl text-gray-300">
            Demo ID: {params.id}
          </p>
          <p className="text-gray-400 mt-2">
            Du har 30 minutter til at udforske platformen
          </p>
        </div>

        <div className="bg-gray-800 rounded-xl p-8">
          <h2 className="text-2xl font-bold text-gray-100 mb-6 text-center">
            V√¶lg din rolle for at starte
          </h2>

          <div className="grid md:grid-cols-3 gap-6 mb-8">
            {roles.map((role) => (
              <button
                key={role.id}
                onClick={() => setSelectedRole(role.id)}
                className={`p-6 rounded-lg border-2 transition-all ${
                  selectedRole === role.id
                    ? 'border-emerald-500 bg-emerald-500/10'
                    : 'border-gray-600 hover:border-gray-500 bg-gray-700/50'
                }`}
              >
                <div className="text-4xl mb-3">{role.icon}</div>
                <h3 className="font-semibold text-lg text-gray-100 mb-2">{role.name}</h3>
                <p className="text-sm text-gray-400">{role.description}</p>
              </button>
            ))}
          </div>

          <button
            onClick={startDemo}
            disabled={!selectedRole}
            className={`w-full py-4 rounded-lg font-semibold text-lg transition-all ${
              selectedRole
                ? 'bg-emerald-600 hover:bg-emerald-700 text-white'
                : 'bg-gray-700 text-gray-500 cursor-not-allowed'
            }`}
          >
            Start Demo {selectedRole && '‚Üí'}
          </button>
        </div>

        <div className="text-center mt-8">
          <Link href="/" className="text-gray-400 hover:text-gray-300 underline">
            Tilbage til forsiden
          </Link>
        </div>
      </div>
    </div>
  );
}